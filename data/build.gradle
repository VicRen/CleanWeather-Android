apply plugin: 'com.android.library'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation project(':domain')
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    def dataDependencies = rootProject.ext.dataDependencies
    def testDependencies = rootProject.ext.dataTestDependencies
    implementation dataDependencies.androidAnnotations
    implementation dataDependencies.javaxInject
    implementation dataDependencies.rxJava
    implementation dataDependencies.rxAndroid
    implementation dataDependencies.okHttp
    implementation dataDependencies.gson
    implementation dataDependencies.rxRelay
    implementation dataDependencies.retrofit
    implementation dataDependencies.retrofitRxJava
    implementation dataDependencies.retrofitGson

    testImplementation testDependencies.junit
}
